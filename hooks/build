#!/usr/bin/env python
from __future__ import print_function
import json
import logging
import os
from datetime import datetime

import docker

CLIENT = docker.client.from_env()
DEFAULT_VERSION = "11.0"
DOCKER_REPO = os.environ.get("DOCKER_REPO", "tecnativa/odoo-base")
GIT_SHA1 = os.environ.get("GIT_SHA1", "")
BUILD_DATE = datetime.utcnow().isoformat()
ODOO_VERSIONS = os.environ.get(
    "ODOO_VERSIONS", "8.0 9.0 10.0 11.0").split()

logging.basicConfig(level=logging.INFO)

# Build version-specific images
for version in ODOO_VERSIONS:
    logging.info("Building image for version %s", version)
    # Low-level api for building images and streaming output
    response = CLIENT.api.build(
        path=".",
        tag=u"{}:{}".format(DOCKER_REPO, version),
        target="odoo-onbuild",
        buildargs={
            "BUILD_DATE": BUILD_DATE,
            "ODOO_VERSION": version,
            "VCS_REF": GIT_SHA1,
        },
    )
    status = None
    for line in response:
        line = json.loads(line)
        if line.get("status") not in {status, None}:
            status = line["status"]
            print(status)
        if line.get("stream"):
            print(line["stream"], end="")

# Tag default version
if DEFAULT_VERSION in ODOO_VERSIONS:
    logging.info("Tagging latest")
    image = CLIENT.images.get(u"{}:{}".format(DOCKER_REPO, DEFAULT_VERSION))
    image.tag(DOCKER_REPO, "latest")
